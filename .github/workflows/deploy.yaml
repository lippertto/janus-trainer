on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      function-name:
        required: true
        type: string
      postgres-host:
        required: true
        type: string
      postgres-database:
        required: true
        type: string
      postgres-username:
        required: true
        type: string
    secrets:
      aws-ecr-key:
        required: true
      aws-ecr-secret-access-key:
        required: true
      postgres-password:
        required: true

env:
  POSTGRES_CONNECTION_URL: postgres://${{inputs.postgres-username}}:${{secrets.postgres-password}}@${{inputs.postgres-host}}:5432/${{inputs.postgres-database}}?connection_limit=5


jobs:
  migrate-database:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: yarn
      - name: migrate database
        run: |
          yarn dlx prisma migrate deploy
  deploy:
    needs: ['migrate-database']
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ inputs.image-name }}
      FUNCTION_NAME: ${{ inputs.function-name }}
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws-ecr-key }}
          aws-secret-access-key: ${{ secrets.aws-ecr-secret-access-key }}
          aws-region: eu-north-1
      - name: Deploy backend image to lambda
        run: |
          aws lambda update-function-code \
            --function-name ${FUNCTION_NAME} \
            --architectures x86_64 \
            --image-uri ${IMAGE_NAME}
          aws lambda wait function-updated \
            --function-name ${FUNCTION_NAME}
      - name: Update environment for lambda
        run: |
          aws lambda update-function-configuration \
            --function-name ${FUNCTION_NAME} \
            --environment "Variables={POSTGRES_CONNECTION_URL=${POSTGRES_CONNECTION_URL}}"
          aws lambda wait function-updated \
            --function-name ${FUNCTION_NAME}
