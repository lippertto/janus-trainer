name: janus-trainer-app

on:
  push:
    branches:
      - main
jobs:
  build-frontend:
    runs-on: ubuntu-latest
    outputs:
      image-name: ${{ steps.push.outputs.image-name }}
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push image to Amazon ECR
        id: push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: janus-trainer-frontend
        run: |
          export IMAGE_TAG="$GITHUB_RUN_ID"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo image-name=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG >> $GITHUB_OUTPUT
  deploy-frontend:
    needs: ["build-frontend"]
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{needs.build-frontend.outputs.image-name}}
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      - name: Deploy backend image to lambda
        run: |
          aws lambda update-function-code \
            --function-name janus-trainer-app \
            --architectures x86_64 \
            --image-uri ${IMAGE_NAME}

  deploy-backend:
    runs-on: ubuntu-latest
    needs:
      # the build-frontend has a linting step which does more than eslint.
      # To avoid partial deployments due to aborted frontend builds, we add a dependency
      - build-frontend
    steps:
      - uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      - name: yarn install
        run: yarn install
      - name: build dto libarary
        run: |
          yarn workspace janus-trainer-dto build
      - name: Deploy backend
        env:
          SLS_DEBUG: '*'
        run: |
          yarn workspace janus-trainer-backend deploy