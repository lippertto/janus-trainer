generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_CONNECTION_URL")
}

model Holiday {
  id    Int    @id @default(autoincrement())
  name  String
  // date in iso 8601
  start String
  // date in iso 8601
  end   String
}

model Discipline {
  id        Int       @id @default(autoincrement())
  name      String
  deletedAt DateTime?
  courses   Course[]
}

enum TrainingStatus {
  NEW
  APPROVED
  COMPENSATED
}

model Training {
  id                Int    @id @default(autoincrement())
  // date in iso 8601
  date              String
  // cents
  compensationCents Int

  createdAt DateTime

  participantCount Int

  status TrainingStatus

  course   Course @relation(fields: [courseId], references: [id])
  courseId Int

  user   UserInDb @relation(fields: [userId], references: [id])
  userId String
}

// The user in the database is only part of the domain object.
// The groups and the email are stored in cognito.
model UserInDb {
  // This is an external id, in our case cognito
  id        String     @id
  iban      String?
  name      String
  deletedAt DateTime?
  trainings Training[]
  courses   Course[]

  // We want the table to be called User
  @@map("User")
}

model CompensationValue {
  id          Int      @id @default(autoincrement())
  cents       Int
  description String
  courses     Course[]
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model Course {
  id                   Int                 @id @default(autoincrement())
  name                 String
  discipline           Discipline          @relation(fields: [disciplineId], references: [id])
  disciplineId         Int
  weekdays             DayOfWeek[]
  startHour            Int
  startMinute          Int
  durationMinutes      Int
  allowedCompensations CompensationValue[]
  trainers             UserInDb[]
  trainings            Training[]
}
