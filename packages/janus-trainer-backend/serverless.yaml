service: janus-trainer-backend

plugins:
  - serverless-offline

package:
  patterns:
    - dist/main.js
  excludeDevDependencies: true

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  iam:
    role:
      managedPolicies:
        - arn:aws:iam::aws:policy/AmazonCognitoPowerUser

params:
  default:
    port: "3001"
    cognito-base-url: https://cognito-idp.eu-north-1.amazonaws.com
  production:
    janus-app-host: https://janus.lippert.dev
    postgres-host: snuffleupagus.db.elephantsql.com
    postgres-database: vudaklvt
    postgres-username: vudaklvt
    postgres-password: ${env:POSTGRES_PASSWORD}
    cognito-user-pool-id: eu-north-1_NtmiRBAZH
    no-color: "true"
    node-env: production
  test:
    janus-app-host: https://janus-test.lippert.dev
    postgres-host: snuffleupagus.db.elephantsql.com
    postgres-database: bwquglhx
    postgres-username: bwquglhx
    postgres-password: ${env:POSTGRES_PASSWORD}
    cognito-user-pool-id: eu-north-1_NtmiRBAZH
    no-color: "true"
    node-env: test
  dev:
    janus-app-host: http://localhost:3000
    postgres-host: localhost
    postgres-database: postgres
    postgres-username: postgres
    postgres-password: postgress
    cognito-user-pool-id: eu-north-1_lE2F0sLzT
    no-color: "false"
    node-env: development

functions:
  main:
    handler: dist/main.handler
    environment:
      PORT: ${param:port}
      JANUS_APP_HOST: ${param:janus-app-host}
      POSTGRES_HOST: ${param:postgres-host}
      POSTGRES_DATABASE: ${param:postgres-database}
      POSTGRES_USERNAME: ${param:postgres-username}
      POSTGRES_PASSWORD: ${param:postgres-password}
      COGNITO_BASE_URL: ${param:cognito-base-url}
      COGNITO_USER_POOL_ID: ${param:cognito-user-pool-id}
      NO_COLOR: ${param:no-color}
      NODE_ENV: ${param:node-env}

    events:
      - http:
          method: ANY
          path: /
      - http:
          method: ANY
          path: '{proxy+}'

custom:
  serverless-offline:
    httpPort: 3001
